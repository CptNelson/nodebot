{
  "_from": "coffea",
  "_id": "coffea@0.4.29",
  "_inBundle": false,
  "_integrity": "sha1-llmtsdrpIGheJZuwNb+P7pB1Txo=",
  "_location": "/coffea",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "coffea",
    "fetchSpec": "latest",
    "name": "coffea",
    "raw": "coffea",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/coffea/-/coffea-0.4.29.tgz",
  "_shasum": "9659adb1dae920685e259bb035bf8fee90754f1a",
  "_shrinkwrap": null,
  "_spec": "coffea",
  "_where": "/home/toni/development/web/apps/nodebot",
  "author": {
    "email": "daniel.bugl@touchlay.com",
    "name": "Caffeinery Developers"
  },
  "bugs": {
    "url": "https://github.com/caffeinery/coffea/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "debug": "^2.2.0",
    "eventemitter3": "1.1.x",
    "irc-replies": "2.0.x",
    "limiter": "1.0.x",
    "linewise": "0.0.3",
    "lodash": "3.10.x"
  },
  "deprecated": false,
  "description": "event based and extensible nodejs irc client library with multi-network support",
  "devDependencies": {
    "coveralls": "2.11.x",
    "istanbul": "0.3.x",
    "mocha": "2.2.x",
    "should": "7.0.x"
  },
  "engine": "node >= 0.10.0",
  "homepage": "https://github.com/caffeinery/coffea#readme",
  "keywords": [
    "chat",
    "coffeehouse",
    "event-based",
    "events",
    "extensible",
    "irc",
    "irc client",
    "irc client library",
    "irc library",
    "irc3",
    "ircv3",
    "library",
    "multi-network",
    "node-irc",
    "nodejs irc",
    "plugins"
  ],
  "license": "BSD-2-Clause",
  "name": "coffea",
  "optionalDependencies": {},
  "readme": "# coffea\n\n[![NPM version (>=0.4)](https://img.shields.io/npm/v/coffea.svg?style=flat-square)](https://www.npmjs.com/package/coffea) [![Build Status](https://img.shields.io/travis/caffeinery/coffea/master.svg?style=flat-square)](https://travis-ci.org/caffeinery/coffea) [![Dependencies](https://img.shields.io/david/caffeinery/coffea.svg?style=flat-square)](https://david-dm.org/caffeinery/coffea) [![Documentation Status](https://readthedocs.org/projects/coffea/badge/?style=flat-square&version=latest)](https://readthedocs.org/projects/coffea/?badge=latest) [![Code Climate](https://img.shields.io/codeclimate/github/caffeinery/coffea.svg?style=flat-square)](https://codeclimate.com/github/caffeinery/coffea) [![Coverage](https://img.shields.io/coveralls/caffeinery/coffea.svg?style=flat-square)](https://coveralls.io/r/caffeinery/coffea)\n\n_event based and extensible nodejs irc client library with multi-network support_\n\nFor support, report an issue on github, join our IRC channel at [![#caffeinery @ chat.freenode.net](https://img.shields.io/badge/IRC-irc.freenode.net%23caffeinery-00a8ff.svg?style=flat-square)](https://webchat.freenode.net/?channels=%23caffeinery&uio=d4) or if you prefer that, write an email to our mailing list: caffeinery@googlegroups.com\n\nIf you want to support coffea development, please consider donating (it helps me keeping the project active and alive!): [![https://gratipay.com/omnidan/](https://img.shields.io/gratipay/omnidan.svg?style=flat-square)](https://gratipay.com/omnidan/)\n\n## API\n\nDocumentation is available at [coffea.caffeinery.org](https://coffea.caffeinery.org/en/latest/).\n\n\n## Installation\n\nTo install coffea, run: `npm install --save coffea` in your project directory.\n\n\n## Examples\n### Normal Connection (Single network)\n```javascript\nvar client = require('coffea')('chat.freenode.net');\n/* full config\nvar client = require('coffea')({\n    host: 'chat.freenode.net',\n    port: 6667, // default value: 6667\n    ssl: false, // set to true if you want to use ssl\n    ssl_allow_invalid: false, // set to true if the server has a custom ssl certificate\n    prefix: '!', // used to parse commands and emit on('command') events, default: !\n    channels: ['#foo', '#bar'], // autojoin channels, default: []\n    nick: 'test', // default value: 'coffea' with random number\n    username: 'test', // default value: username = nick\n    realname: 'test', // default value: realname = nick\n    pass: 'sup3rS3cur3P4ssw0rd', // by default no password will be sent\n    nickserv: {\n        username: 'test',\n        password: 'l33tp455w0rD'\n    },\n    throttling: 250 // default value: 250ms, 1 message every 250ms, disable by setting to false\n});\n*/\n\nclient.on('motd', function (event) {\n    client.join(['#foo', '#bar', '#baz'], event.network);\n});\n\nclient.on('message', function (event) {\n    console.log('[' + event.channel.getName() + '] ' + event.user.getNick() + ': ' + event.message);\n    //[#foo] nick: message\n    event.reply(event.message); // I'm a parrot\n});\n\nclient.on('command', function (event) {\n    if (event.cmd === 'ping') { // respond to `!ping SOMETHING` with `SOMETHING`, or `pong`, if SOMETHING is not specified\n        event.reply(event.args.length > 0 ? event.args.join(' ') : 'pong');\n    }\n});\n```\n\n### Multiple networks\n```javascript\nvar client = require('coffea')(['chat.freenode.net', 'irc.oftc.net']);\n/* full config\nvar client = require('coffea')([\n    {\n        host: 'chat.freenode.net',\n        name: 'freenode', // this is not required but recommended when dealing with multiple networks, by default a numeric id will be assigned\n        port: 6667, // default value: 6667\n        ssl: false, // set to true if you want to use ssl\n        ssl_allow_invalid: false, // set to true if the server has a custom ssl certificate\n        prefix: '!', // used to parse commands and emit on('command') events, default: !\n        channels: ['#foo', '#bar'], // autojoin channels, default: []\n        nick: 'test', // default value: 'coffea' with random number\n        username: 'test', // default value: username = nick\n        realname: 'test', // default value: realname = nick\n        pass: 'sup3rS3cur3P4ssw0rd', // by default no password will be sent\n        nickserv: {\n            username: 'test',\n            password: 'l33tp455w0rD'\n        },\n        throttling: 250 // default value: 250ms, 1 message every 250ms, disable by setting to false\n    },\n    {\n        host: 'irc.oftc.net',\n        name: 'oftc', // this is not required but recommended when dealing with multiple networks, by default a numeric id will be assigned\n        port: 6667, // default value: 6667\n        ssl: false, // set to true if you want to use ssl\n        ssl_allow_invalid: false, // set to true if the server has a custom ssl certificate\n        prefix: '!', // used to parse commands and emit on('command') events, default: !\n        channels: ['#foo', '#bar'], // autojoin channels, default: []\n        nick: 'test', // default value: 'coffea' with random number\n        username: 'test', // default value: username = nick\n        realname: 'test', // default value: realname = nick\n        pass: 'sup3rS3cur3P4ssw0rd', // by default no password will be sent\n        nickserv: {\n            username: 'test',\n            password: 'l33tp455w0rD'\n        },\n        throttling: 250 // default value: 250ms, 1 message every 250ms, disable by setting to false\n    }\n]);\n*/\n\n// note how we are passing the network here, by default it'll just send to all networks\n// by using network you can join specific channels on specific networks\nclient.on('motd', function (event) {\n    client.join(['#foo', '#bar', '#baz'], event.network);\n});\n\nclient.on('message', function (event) {\n    console.log('[' + event.channel.getName() + '] ' + event.user.getNick() + ': ' + event.message);\n    //[#foo] nick: message\n    event.reply(event.message); // I'm a parrot\n});\n\nclient.on('command', function (event) {\n    if (event.cmd === 'ping') { // respond to `!ping SOMETHING` with `SOMETHING`, or `pong`, if SOMETHING is not specified\n        event.reply(event.args.length > 0 ? event.args.join(' ') : 'pong');\n    }\n});\n```\n\n### Using SSL (and other goodies)\n```javascript\nvar client = require('coffea')({\n    host: 'chat.freenode.net',\n    ssl: true, // we want to use ssl\n    channels: ['#foo', '#bar', '#baz'], // autojoin channels\n    // prefix: '!', // used to parse commands and emit on('command') events, default: !\n    // ssl_allow_invalid: true, // allow invalid/self-signed/expired SSL certs - default value: false\n    // port: 6697, // will default to 6697 on ssl\n    // nick: 'test', // default value: 'coffea' with random number\n    // username: 'test', // default value: username = nick\n    // realname: 'test', // default value: realname = nick\n    // pass: 'sup3rS3cur3P4ssw0rd', // by default no password will be sent\n    // nickserv: {\n    //     username: 'test',\n    //     password: 'l33tp455w0rD'\n    // },\n    // throttling: 250 // default value: 250ms, 1 message every 250ms, disable by setting to false\n});\n\nclient.on('message', function (event) {\n    console.log('[' + event.channel.getName() + '] ' + event.user.getNick() + ': ' + event.message);\n    //[#foo] nick: message\n    event.reply(event.message); // I'm a parrot\n});\n\nclient.on('command', function (event) {\n    if (event.cmd === 'ping') { // respond to `!ping SOMETHING` with `SOMETHING`, or `pong`, if SOMETHING is not specified\n        event.reply(event.args.length > 0 ? event.args.join(' ') : 'pong');\n    }\n});\n```\n\n### Debugging\n\nMake sure to listen to `error` events to see possible errors/warnings:\n\n```javascript\nclient.on('error', function (err, event) {\n    console.log(event.name, err.stack);\n});\n```\n\nYou can also add the `err` parameter to any event listener (change from `function (event)` to `function (err, event)`:\n\n```javascript\nclient.on('whois', function (err, event) {\n    if (err) console.log(\"WHOIS ERROR:\", err.stack);\n    console.log(\"whois:\", event);\n});\n```\n\n### Configuration file\n\nUsing a configuration file for your bot is super easy with coffea! First, create `config.json` and paste your current configuration. (Make sure to change `key: 'something'` to `\"key\": \"something\"` as we're dealing with JSON now, e.g. `host: 'chat.freenode.net'` -> `\"host\": \"chat.freenode.net\"`)\n\nThen, simply do:\n\n```javascript\nvar client = require('coffea')(require('./config.json'));\n```\n\n#### `config.json` with full config\n\n```javascript\n{\n    \"host\": \"chat.freenode.net\",\n    \"port\": 6667,\n    \"ssl\": false,\n    \"ssl_allow_invalid\": false,\n    \"prefix\": \"!\",\n    \"channels\": [\"#foo\", \"#bar\"],\n    \"nick\": \"test\",\n    \"username\": \"test\",\n    \"realname\": \"test\",\n    \"pass\": \"sup3rS3cur3P4ssw0rd\",\n    \"nickserv\": {\n        \"username\": \"test\",\n        \"password\": \"l33tp455w0rD\"\n    },\n    \"throttling\": 250\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/caffeinery/coffea.git"
  },
  "scripts": {
    "coverage": "./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec test/* && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "test": "mocha --require should --reporter spec test/*"
  },
  "version": "0.4.29"
}
